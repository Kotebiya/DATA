/* Section 1: Setup */
%LET SOURCE=/folders/myshortcuts/DATA/Census/CPS Basic/;
LIBNAME BASIC "&SOURCE.";

FILENAME INSTR "&SOURCE.SAS_IMPORT.XLS";
PROC IMPORT DATAFILE=INSTR OUT=BASIC.INSTRUCT DBMS=XLS REPLACE;
RUN;

/* Section 2: Importing everything from raw files */
DATA _NULL_;
	SET BASIC.INSTRUCT;
	*WHERE YEAR IN("2000","2001","2002","2003","2004",
		"2005","2006","2007","2008","2009");
	WHERE YEAR IN("2007","2008");
	CALL EXECUTE(
	"FILENAME datafile SASZIPAM ""&SOURCE."||TRIM(DICTIONARY)||"/"||TRIM(MONTH)||TRIM(SUBSTR(TRIM(YEAR),3,2))||"pub.zip"";
 	DATA BASIC.BASE_"||TRIM(YEAR)||"_"||TRIM(MONNUM)||";
 	INFILE datafile("||TRIM(MONTH)||TRIM(SUBSTR(TRIM(YEAR),3,2))||"pub."||TRIM(FILETYPE)||") LRECL=2300 MISSOVER;
 		%INCLUDE ""&SOURCE.IMPORT."||TRIM(DICTIONARY)||".SAS"";
 	RUN;
	");
RUN;

/* Section 3: Recording, Transforming, and Merging */
%LET KEEPVARS =HRHHID HRHHID2 PULINENO HRMONTH HRYEAR4 HRMIS
	PESEX PRTAGE PEAGE PTDTRACE PEHSPNON PEMARITL PRCITSHP
	PERACE PRHSPNON
	PERRP HEFAMINC
	PEEDUCA PESCHENR PEDWAVR
	PEMLR PEHRUSLT PEHRFTPT PELKDUR PENLFACT
	HWHHWGT PWSSWGT
	HETENURE HEHOUSUT;

DATA FREQ00;
	SET	BASIC.BASE_2000:
		BASIC.BASE_2001:
		BASIC.BASE_2002:
		BASIC.BASE_2003:
		BASIC.BASE_2004:;
	KEEP &KEEPVARS.;
	WHERE PWSSWGT > 0;
RUN;

DATA FREQ05;
	SET	BASIC.BASE_2005:
		BASIC.BASE_2006:
		BASIC.BASE_2007:
		BASIC.BASE_2008:
		BASIC.BASE_2009:;
	KEEP &KEEPVARS.;
	WHERE PWSSWGT > 0;
RUN;

DATA FREQ10;
	SET	BASIC.BASE_2010:
		BASIC.BASE_2011:
		BASIC.BASE_2012:
		BASIC.BASE_2013:
		BASIC.BASE_2014:;
	KEEP &KEEPVARS.;
	WHERE PWSSWGT > 0;
RUN;

DATA FREQ14;
	SET	BASIC.BASE_2015:
		BASIC.BASE_2016:;
	KEEP &KEEPVARS.;
	WHERE PWSSWGT > 0;
RUN;

DATA FREQ;
	SET	FREQ00
		FREQ05
		FREQ10
		FREQ14;
RUN;

PROC SQL;
	CREATE TABLE FREQ2 AS
	SELECT
	TRIM(HRHHID||HRHHID2) AS HHID, PULINENO AS PID,
	TRIM(CALCULATED HHID||INPUT(PUT(PULINENO,z2.),$2.)) AS ID,
	HRMIS AS MIS,
	
	HRYEAR4 AS YEAR, INPUT(PUT(HRMONTH,z2.),$2.) AS MON,
	
	CASE WHEN HETENURE = 1 THEN 1 WHEN HETENURE IN(2,3) THEN 0 ELSE . END AS OWNER,
	HWHHWGT AS HWGT, PWSSWGT*55472/139926404.4686 AS PWGT,
	PRTAGE AS AGE,
	PEMLR, PELKDUR,
	CASE	WHEN PEMLR IN(1,2) THEN 1
			WHEN PEMLR IN(3,4) THEN 0
			WHEN PEMLR IN(5,6,7) THEN . ELSE .
			END AS EMP,
	CASE	WHEN (substr(put(HRYEAR4,4.),1,2) = "20" & PEHSPNON = 2 & PTDTRACE = 1) OR (substr(put(HRYEAR4,4.),1,2) = "19" & PRHSPNON = 2 & PERACE = 1) THEN 1
			WHEN (substr(put(HRYEAR4,4.),1,2) = "20" & PEHSPNON = 2 & PTDTRACE = 2) OR (substr(put(HRYEAR4,4.),1,2) = "19" & PRHSPNON = 2 & PERACE = 2) THEN 2
			WHEN (substr(put(HRYEAR4,4.),1,2) = "20" & PEHSPNON = 2 & PTDTRACE IN(3,4)) OR (substr(put(HRYEAR4,4.),1,2) = "19" & PRHSPNON = 2 & PERACE = 4) THEN 3
			WHEN (substr(put(HRYEAR4,4.),1,2) = "20" & PEHSPNON = 2 & PTDTRACE NOT IN(1:4)) OR (substr(put(HRYEAR4,4.),1,2) = "19" & PRHSPNON = 2 & PERACE = 3) THEN 4
			WHEN (substr(put(HRYEAR4,4.),1,2) = "20" & PEHSPNON = 1) OR (substr(put(HRYEAR4,4.),1,2) = "19" & PRHSPNON = 1) THEN 5
			ELSE . END AS RACE,
	CASE 	WHEN PEEDUCA IN(31:38)	THEN EDUC = 1
			WHEN PEEDUCA IN(39) 	THEN EDUC = 2
			WHEN PEEDUCA IN(40:42)	THEN EDUC = 3
			WHEN PEEDUCA IN(43:46)	THEN EDUC = 4
			ELSE . END AS EDUC
	FROM FREQ
	WHERE AGE IN(16:99)
	ORDER BY CALCULATED ID, MIS;
QUIT;

DATA FREQ3;
	SET FREQ2;
	BY ID;
	RETAIN UNEMP UE_OUT WORK EMP_OUT;
	IF FIRST.ID THEN DO; 
		UNEMP = .;
		UE_OUT = .;
	END;
	IF PEMLR IN(3,4) THEN DO;
		UNEMP = 1;
		IF LAG1(ID) NE ID THEN UE_OUT = 0;
	END;
	IF UNEMP = 1 & PEMLR IN(1,2) AND LAG1(UE_OUT) = 0 THEN UE_OUT = 1;
		ELSE IF UNEMP = 1 & PEMLR IN(5,6,7) AND LAG1(UE_OUT) = 0 THEN UE_OUT = 2;
	IF UE_OUT IN(0,2) THEN HIRED = 0;
		ELSE IF UE_OUT = 1 THEN HIRED = 1;

	IF FIRST.ID THEN DO;	
		WORK = .;
		EMP_OUT = . ;
	END;
	IF PEMLR IN(1,2) THEN DO;
		WORK = 1;
		IF LAG1(ID) NE ID THEN EMP_OUT = 0;
	END;

	IF WORK = 1 & PEMLR IN(3,4) AND LAG1(EMP_OUT) = 0 THEN EMP_OUT = 1;
		ELSE IF WORK = 1 & PEMLR IN(5,6,7) AND LAG1(EMP_OUT) = 0 THEN EMP_OUT = 2;
	IF EMP_OUT IN(0,2) THEN FIRED = 0;
		ELSE IF EMP_OUT = 1 THEN FIRED = 1;

	/* Outcome */
	*IF (LAST.ID & UE_OUT = 0)
		OR (UE_OUT IN(1,2) & LAG1(UE_OUT) NOTIN(1,2));
	IF (LAST.ID & EMP_OUT = 0)
		OR (EMP_OUT IN(1,2) & LAG1(EMP_OUT) NOTIN(1,2));
	/* Continuous */
	*IF UE_OUT = 0 OR LAG1(UE_OUT) NOTIN(1,2) & UE_OUT NE .;
	*IF EMP_OUT = 0 OR LAG1(EMP_OUT) NOTIN(1,2) & EMP_OUT NE .;
RUN;

*PROC SQL;
*	DESCRIBE TABLE FREQ4;
*QUIT;

PROC SQL;
	CREATE TABLE FREQ4 AS
	SELECT
	REF.ID,
	REF.MIS, REF.YEAR, REF.MON, REF.HWGT, REF.PWGT,
	REF.AGE, REF.RACE, REF.EDUC, REF.OWNER,
	REF.pemlr, REF.pelkdur,
	REF.EMP, REF.UNEMP, REF.UE_OUT, REF.HIRED, REF.EMP_OUT, REF.FIRED
	FROM (
		SELECT
		ID,
		COUNT(ID) AS NUM
		FROM FREQ2
		GROUP BY ID
		HAVING CALCULATED NUM >= 5)
	AS CHECKID INNER JOIN
	FREQ3 AS REF
	ON CHECKID.ID = REF.ID;
QUIT;

/* Section 4: Statistics */
PROC FREQ DATA=FREQ2;
	TABLES EDUC*RACE YEAR*MON / NOROW NOPERCENT NOFREQ;
	WEIGHT PWGT;
RUN;

PROC FREQ DATA=FREQ4;
	*TABLES UE_OUT / NOCUM NOFREQ;
	*TABLES EDUC*UE_OUT / NOCOL NOCUM NOPERCENT NOFREQ;
	TABLES EMP_OUT / NOCUM NOFREQ;
	TABLES EDUC*EMP_OUT / NOCOL NOCUM NOPERCENT NOFREQ;	WEIGHT PWGT;
RUN;

PROC FREQ DATA=FREQ4;
	*TABLES RACE*EDUC*UE_OUT / NOCOL NOCUM NOPERCENT NOFREQ;
	TABLES RACE*EDUC*EMP_OUT / NOCOL NOCUM NOPERCENT NOFREQ;
	WEIGHT PWGT;
RUN;

/* Section 5: Analysis */
/* Multinomial Logistic Regression */
PROC GLM DATA=FREQ4;
	CLASS RACE(REF="1") EDUC(REF="1");
	MODEL HIRED = RACE|EDUC ;
	MEANS RACE|EDUC / TUKEY LINES;
RUN;

PROC LOGISTIC DATA=FREQ4;
	MODEL UE_OUT(REF="0") = / LINK=GLOGIT;
	WEIGHT PWGT;
RUN;

PROC LOGISTIC DATA=FREQ4;
	CLASS RACE(REF="1" PARAM=REF) MON(REF="01" PARAM=REF);
	MODEL UE_OUT(REF="0") = RACE|MON / LINK=GLOGIT;
	WEIGHT PWGT;
RUN;

PROC LOGISTIC DATA=FREQ4;
	CLASS RACE(REF="1" PARAM=REF) EDUC(REF="1" PARAM=REF);
	MODEL UE_OUT(REF="0") = RACE|EDUC / LINK=GLOGIT;

	WEIGHT PWGT;
RUN;

PROC LOGISTIC DATA=FREQ4 OUTEST=LOGISTIC_MODEL;
	*MODEL UE_OUT(REF="0") = / LINK=GLOGIT;

	*CLASS RACE(REF="1" PARAM=REF);
	*MODEL UE_OUT(REF="0") = RACE / LINK=GLOGIT;
	
	*CLASS EDUC(REF="1" PARAM=REF);
	*MODEL UE_OUT(REF="0") = EDUC / LINK=GLOGIT;

	CLASS RACE(REF="1" PARAM=REF) EDUC(REF="1" PARAM=REF);* MON(REF="01" PARAM=REF);
	MODEL EMP_OUT(REF="0") = RACE|EDUC / LINK=GLOGIT;

	WEIGHT PWGT;
	STORE BASIC.LOGISTIC;
RUN;

PROC PLM RESTORE=BASIC.LOGISTIC;
	*SHOW PARAMETERS; SHOW _ALL_;
	SCORE DATA=FREQ4 OUT=XB1;
	SCORE DATA=FREQ4 OUT=PR1 / ILINK;
	*ESTIMATE "NHB vs. NHA" RACE -1 0 1 0 0 / CATEGORY=SEPARATE ;
	*TEST INTERCEPT 1 RACE 1;
RUN;

%MACRO SHIFT(PREFIX);
PROC TRANSPOSE DATA=&PREFIX.1 OUT=&PREFIX.2 PREFIX=&PREFIX._;
	BY ID RACE EDUC;
	ID _LEVEL_;
	VAR Predicted;
RUN;

PROC SORT DATA=&PREFIX.2 OUT=&PREFIX.3(KEEP=RACE EDUC &PREFIX._:) NODUPKEY;
	BY RACE EDUC &PREFIX._:;
RUN;
%MEND;

%SHIFT(XB);
%SHIFT(PR);

DATA XB_PP;
	MERGE XB3 PR3;
	BY RACE EDUC;
	FORMAT XB_0--PR_2 6.4;
RUN;

PROC GLIMMIX DATA=FREQ4;
	*CLASS UE_OUT(REF="0");
	*MODEL UE_OUT = / LINK=GLOGIT DIST=MULTINOMIAL SOLUTION;

	CLASS UE_OUT(REF="0") RACE(REF="1") EDUC(REF="1");
	MODEL UE_OUT = RACE|EDUC / LINK=GLOGIT DIST=MULTINOMIAL SOLUTION;
	WEIGHT PWGT;
	STORE BASIC.GLIMMIX;
	CONTRAST "NHB vs. NHA" RACE 0 1 -1 0 0 / BYCATEGORY;
	CONTRAST "NHB vs. HIS" RACE 0 1 0 0 -1 / BYCATEGORY;
RUN;
QUIT;

PROC PLM RESTORE=BASIC.GLIM;
	SHOW PARAMETERS;
	CONTRAST RACE 0 1 -1 0 0 / CATEGORY=SEPARATE;
	*ESTIMATE "For the insured" UNINS 1;
	*ESTIMATE "For the uninsured" UNINS 1 UNINSURED*UNINS 1;
RUN;

PROC GLIMMIX DATA=FREQ4;
	MODEL EMP = / SOLUTION;
RUN;
QUIT;

PROC LOGISTIC DESCENDING DATA=FREQ2;
	CLASS RACE(REF="1") EDUC(REF="1");
	MODEL EMP = AGE RACE EDUC RACE*EDUC;
	OUTPUT PRED=P OUT=FREQ3;
RUN;

PROC CORR DATA=FREQ3;
	VAR P EMP;
RUN;

/* Join to ASEC */
%MACRO PULL_ASEC(YR);
%LET SOURCE&YR.=/folders/myshortcuts/DATA/Census/CPS ASEC/20&YR./;
/* Double Ampersands force the macro processor to go back to analyze the whole statement. */
LIBNAME ASEC&YR. "&&SOURCE&YR..";

DATA ASEC&YR.;
	SET ASEC&YR..ASEC&YR.;
	ID = TRIM(H_IDNUM1||H_IDNUM2||INPUT(PUT(A_LINENO,z2.),$2.));
	KEEP H_IDNUM1 H_IDNUM2 A_LINENO ID H_TENURE;
RUN;
%MEND;

%PULL_ASEC(12);
%PULL_ASEC(13);
%PULL_ASEC(14);
%PULL_ASEC(15);

DATA ASEC;
	SET ASEC:;
RUN;

PROC SORT DATA=ASEC NODUPKEY;
	BY ID;
RUN;

PROC SQL;
	CREATE TABLE JOINTEST AS
	SELECT
	A.ID
	FROM FREQ4 AS A INNER JOIN ASEC AS B
	ON A.ID = B.ID;
QUIT;

/* Unused - Start */
PROC CATMOD DATA=FREQ2;
	MODEL UE_OUT = EDUC;
RUN;

PROC SORT DATA=FREQ;
	BY HRHHID HRHHID2 PULINENO HRMIS;
RUN;

%LET VARLIST= HHID PID MIS YEAR MON HWGT PWGT RACE AGE EDUC EMP PEMLR PELKDUR;
DATA FREQ2;
	RETAIN &VARLIST.;
	ATTRIB MON LENGTH=$2.;
	SET FREQ(RENAME=(PULINENO=PID
	HRMIS=MIS HRYEAR4=YEAR
	HWHHWGT=HWGT PWSSWGT=PWGT
	PRTAGE=AGE
	));
	HHID=TRIM(HRHHID||HRHHID2);
	MON = INPUT(PUT(HRMONTH,z2.),$2.);
	IF PEMLR IN(1,2) THEN EMP = 1;
		ELSE IF PEMLR IN(3,4) THEN EMP = 0;
		ELSE IF PEMLR IN(5,6,7) THEN EMP = .;
	IF PEHSPNON = 2 & PTDTRACE = 1 THEN RACE = 1;
		ELSE IF PEHSPNON = 2 & PTDTRACE = 2 THEN RACE = 2;
		ELSE IF PEHSPNON = 2 & PTDTRACE IN(3,4) THEN RACE = 3;
		ELSE IF PEHSPNON = 2 THEN RACE = 4;
		ELSE IF PEHSPNON = 1 THEN RACE = 5;
	IF PEEDUCA IN(31:38) THEN EDUC = 1;
		ELSE IF PEEDUCA IN(39) THEN EDUC = 2;
		ELSE IF PEEDUCA IN(40:42) THEN EDUC = 3;
		ELSE IF PEEDUCA IN(43:46) THEN EDUC = 4;
		*ELSE IF PEEDUCA IN(43) THEN EDUC = 4;
		*ELSE IF PEEDUCA IN(44:46) THEN EDUC = 5;
	KEEP &VARLIST.;
	WHERE MIS = 1 & AGE IN(25:54);
RUN;

PROC CATMOD DATA=FREQ4;
	MODEL UE_OUT = ;
RUN;
/* Unused - End */
